/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Info.*;
import Prescriber.FdbPrescriber;
import Prescriber.Prescriber;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Sam
 */
public class newJDialog extends javax.swing.JDialog {
    public static final int DRUGS = 0;
    public static final int ALLERGIES = 1;

    private final int flag;
    private static FdbPrescriber garbage;
    private final Patient patient;
    private List<? extends Displayable > list = new ArrayList<>();
    private Frame parent;
    /**
     * Creates new form JDialog
     */
    public newJDialog(java.awt.Frame parent, boolean modal, Patient patient, int flag) {
        super(parent, modal);
        //This is the most garbage this ever, don't put static in interfaces
        if (garbage==null){ this.garbage = (FdbPrescriber) Prescriber.createFdbPrescriber();}
        this.parent =parent;
        this.flag = flag;
        this.patient = patient;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Add Drug/Allergy");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addComponent(jScrollPane1)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldActionPerformed

    }//GEN-LAST:event_jTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        switch (flag){
            case DRUGS:{
                for(int i: jList1.getSelectedIndices()){
                    List<DrugInteraction> drugInteractions = garbage.findInteractions(((List<Drug>)list).get(i), patient);
                    if(drugInteractions.isEmpty() !=true){
                        WarningJDialog warning = new WarningJDialog(parent,true, ((List<Drug>)list).get(i),drugInteractions);
                        warning.setVisible(true);
                        if(warning.clickedContinue()){
                            patient.addDrug(((List<Drug>)list).get(i));
                        }
                    }
                    else{
                        patient.addDrug(((List<Drug>)list).get(i));
                }}
                break;
            }
            case ALLERGIES:{
                for(int i: jList1.getSelectedIndices()){
                    patient.addAllergy(((List<Allergy>)list).get(i));
                }
                break;
            }
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldKeyTyped
//        list = new ArrayList<>();
//        switch (flag){
//            case DRUGS:{
//                list = garbage.queryDrugs(jTextField1.getText());
//                break;
//            }
//            case ALLERGIES:{
//                list = garbage.queryAllergies(jTextField1.getText());
//                break;
//            }
//        }
//        jList1.setListData(list.stream().map(Displayable::getDisplayName).toArray(String[]::new));
    }//GEN-LAST:event_jTextFieldKeyTyped

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        list = new ArrayList<>();
        switch (flag){
            case DRUGS:{
                list = garbage.queryDrugs(jTextField1.getText());
                break;
            }
            case ALLERGIES:{
                list = garbage.queryAllergies(jTextField1.getText());
                break;
            }
        }
        jList1.setListData(list.stream().map(Displayable::getDisplayName).toArray(String[]::new));
    }//GEN-LAST:event_jTextField1KeyReleased
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
